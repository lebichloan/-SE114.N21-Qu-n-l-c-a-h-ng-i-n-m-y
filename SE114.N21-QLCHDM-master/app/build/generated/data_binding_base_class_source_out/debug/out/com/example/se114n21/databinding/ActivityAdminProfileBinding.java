// Generated by view binder compiler. Do not edit!
package com.example.se114n21.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.se114n21.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton butBack;

  @NonNull
  public final Button butSave;

  @NonNull
  public final EditText txtDiaChi;

  @NonNull
  public final EditText txtGioiTinh;

  @NonNull
  public final EditText txtHoTen;

  @NonNull
  public final EditText txtNgaySinh;

  @NonNull
  public final EditText txtSDT;

  private ActivityAdminProfileBinding(@NonNull LinearLayout rootView, @NonNull ImageButton butBack,
      @NonNull Button butSave, @NonNull EditText txtDiaChi, @NonNull EditText txtGioiTinh,
      @NonNull EditText txtHoTen, @NonNull EditText txtNgaySinh, @NonNull EditText txtSDT) {
    this.rootView = rootView;
    this.butBack = butBack;
    this.butSave = butSave;
    this.txtDiaChi = txtDiaChi;
    this.txtGioiTinh = txtGioiTinh;
    this.txtHoTen = txtHoTen;
    this.txtNgaySinh = txtNgaySinh;
    this.txtSDT = txtSDT;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.butBack;
      ImageButton butBack = ViewBindings.findChildViewById(rootView, id);
      if (butBack == null) {
        break missingId;
      }

      id = R.id.butSave;
      Button butSave = ViewBindings.findChildViewById(rootView, id);
      if (butSave == null) {
        break missingId;
      }

      id = R.id.txtDiaChi;
      EditText txtDiaChi = ViewBindings.findChildViewById(rootView, id);
      if (txtDiaChi == null) {
        break missingId;
      }

      id = R.id.txtGioiTinh;
      EditText txtGioiTinh = ViewBindings.findChildViewById(rootView, id);
      if (txtGioiTinh == null) {
        break missingId;
      }

      id = R.id.txtHoTen;
      EditText txtHoTen = ViewBindings.findChildViewById(rootView, id);
      if (txtHoTen == null) {
        break missingId;
      }

      id = R.id.txtNgaySinh;
      EditText txtNgaySinh = ViewBindings.findChildViewById(rootView, id);
      if (txtNgaySinh == null) {
        break missingId;
      }

      id = R.id.txtSDT;
      EditText txtSDT = ViewBindings.findChildViewById(rootView, id);
      if (txtSDT == null) {
        break missingId;
      }

      return new ActivityAdminProfileBinding((LinearLayout) rootView, butBack, butSave, txtDiaChi,
          txtGioiTinh, txtHoTen, txtNgaySinh, txtSDT);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
