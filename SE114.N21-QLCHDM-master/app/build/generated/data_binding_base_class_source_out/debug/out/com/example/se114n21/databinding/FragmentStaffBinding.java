// Generated by view binder compiler. Do not edit!
package com.example.se114n21.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.se114n21.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStaffBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout ctl;

  @NonNull
  public final EditText edtStaffSearch;

  @NonNull
  public final FloatingActionButton fabAddStaff;

  @NonNull
  public final ImageView imgRegisterBack;

  @NonNull
  public final ImageView imgStaffSearch;

  @NonNull
  public final RecyclerView rcvStaff;

  @NonNull
  public final TextView tvStaffTitle;

  private FragmentStaffBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout ctl,
      @NonNull EditText edtStaffSearch, @NonNull FloatingActionButton fabAddStaff,
      @NonNull ImageView imgRegisterBack, @NonNull ImageView imgStaffSearch,
      @NonNull RecyclerView rcvStaff, @NonNull TextView tvStaffTitle) {
    this.rootView = rootView;
    this.ctl = ctl;
    this.edtStaffSearch = edtStaffSearch;
    this.fabAddStaff = fabAddStaff;
    this.imgRegisterBack = imgRegisterBack;
    this.imgStaffSearch = imgStaffSearch;
    this.rcvStaff = rcvStaff;
    this.tvStaffTitle = tvStaffTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStaffBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStaffBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_staff, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStaffBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ctl;
      ConstraintLayout ctl = ViewBindings.findChildViewById(rootView, id);
      if (ctl == null) {
        break missingId;
      }

      id = R.id.edt_staff_search;
      EditText edtStaffSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtStaffSearch == null) {
        break missingId;
      }

      id = R.id.fab_add_staff;
      FloatingActionButton fabAddStaff = ViewBindings.findChildViewById(rootView, id);
      if (fabAddStaff == null) {
        break missingId;
      }

      id = R.id.img_register_back;
      ImageView imgRegisterBack = ViewBindings.findChildViewById(rootView, id);
      if (imgRegisterBack == null) {
        break missingId;
      }

      id = R.id.img_staff_search;
      ImageView imgStaffSearch = ViewBindings.findChildViewById(rootView, id);
      if (imgStaffSearch == null) {
        break missingId;
      }

      id = R.id.rcv_staff;
      RecyclerView rcvStaff = ViewBindings.findChildViewById(rootView, id);
      if (rcvStaff == null) {
        break missingId;
      }

      id = R.id.tv_staff_title;
      TextView tvStaffTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvStaffTitle == null) {
        break missingId;
      }

      return new FragmentStaffBinding((ConstraintLayout) rootView, ctl, edtStaffSearch, fabAddStaff,
          imgRegisterBack, imgStaffSearch, rcvStaff, tvStaffTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
